serviceAccount: cloudrun@test-project-neuroit.iam.gserviceaccount.com
logsBucket: neuroit-test # flowsource-template-bucket

steps:
  # Ensure pipeline-terraform directory exists
  - name: 'gcr.io/cloud-builders/gcloud'
    entrypoint: 'bash'
    args:
      - '-c'
      - 'mkdir -p ./pipeline-terraform'

  # Copy Terraform files into pipeline-terraform
  - name: 'gcr.io/cloud-builders/gcloud'
    entrypoint: 'bash'
    args:
      - '-c'
      - 'cp -r ./terraform/* ./pipeline-terraform/'
      
  # Get existing repositories
  - name: 'gcr.io/cloud-builders/gcloud'
    entrypoint: 'bash'
    args:
      - '-c'
      - |
        gcloud builds repositories list \
          --region=${_REGION} \
          --connection=${_GITHUB_CONNECTION_NAME} \
          --format="json" > ./pipeline-terraform/repositories.json
  # see contents of repositories.json
  - name: 'gcr.io/cloud-builders/gcloud'
    entrypoint: 'bash'
    args: 
      - '-c'
      - 'ls-l ./pipeline-terraform/ && cat ./pipeline-terraform/repositories.json ||echo "repository.json not found"'        
  # Create Cloud Build Trigger
  - id: 'Cloud Build Trigger'
    name: 'hashicorp/terraform:light'
    entrypoint: 'sh'
    args:
      - '-c'
      - |
        cd ./pipeline-terraform
        terraform init -upgrade
        terraform fmt -check
        terraform validate
        terraform plan -out=tfplan -input=false \
          -var 'project_id=${_PROJECT_ID}'  \
          -var 'trigger_name=${_TRIGGER_NAME}' \
          -var 'region=${_REGION}' \
          -var 'github_connection_name=${_GITHUB_CONNECTION_NAME}'\
          -var 'github_repo_owner=${_GITHUB_REPO_OWNER}' \
          -var 'github_repo_name=${_GITHUB_REPO_NAME}' \
          -var 'branch_name=^${_BRANCH_NAME}$' \
          -var 'cloudbuild_yaml_path=${_CLOUDBUILD_YAML_PATH}' \
          -var 'service_account_email=${_SERVICE_ACCOUNT_EMAIL}' 
        terraform apply -auto-approve tfplan 
        
  # invoke newly created repo trigger
  - name: 'gcr.io/cloud-builders/gcloud'
    entrypoint: 'bash'
    args:
      - '-c'
      - |
        sleep 20
        gcloud builds triggers run test-repo-trigger  --project=${_PROJECT_ID} --region=${_REGION} --branch=${_BRANCH_NAME}
   

options:
  

timeout: '1200s'  # Set timeout to 20 minutes

substitutions:
  _PROJECT_ID: test-project-neuroit
  _REGION: us-east1
  _GITHUB_CONNECTION_NAME: Jashobanta
  _TRIGGER_NAME: test-repo-trigger
  _GITHUB_REPO_OWNER: Jashobanta
  _GITHUB_REPO_NAME: test-repo 
  _BRANCH_NAME: main
  _CLOUDBUILD_YAML_PATH: cloudbuild.yaml
  _SERVICE_ACCOUNT_EMAIL: cloudrun@test-project-neuroit.iam.gserviceaccount.com



